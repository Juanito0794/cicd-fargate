version: 0.2
phases:
  install:
    commands:
      - echo "Install Phase - Nothing to do using latest Amazon Linux Docker Image for CodeBuild which has all AWS Tools - https://github.com/aws/aws-codebuild-docker-images/blob/master/al2/x86_64/standard/3.0/Dockerfile"
  pre_build:
      commands:
        # Docker Image Tag with Date Time & Code Buiild Resolved Source Version
        - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        # Update Image tag in our Kubernetes Deployment Manifest        
        - echo "Update Image tag in kube-manifest..."
        #- sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' YAML/deployment.yml
        # Verify AWS CLI Version        
        #- echo "Verify AWS CLI Version..."
        #- aws --version
        # Login to ECR Registry for docker to push the image to ECR Repository
        - echo "Login in to Amazon ECR..."
        #- aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 344306482818.dkr.ecr.us-east-1.amazonaws.com
        - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/y1n8y1c3
        #- $(aws ecr get-login --no-include-email --region us-east-2)
        # Update Kube config Home Directory
        #- export KUBECONFIG=$HOME/.kube/config
        #- export path=/home/ec2-user/.kube/config
  build:
    commands:
      # Build Docker Image
      - echo "Build started on 'date'"
      - echo "Building the Docker image..."
      - docker build --tag $REPOSITORY_URI:$TAG .
  post_build:
    commands:
      # Push Docker Image to ECR Repository
      - echo "Build completed on 'date'"
      - echo "Pushing the Docker image to ECR Repository"
      - docker push $REPOSITORY_URI:$TAG
      - echo "Docker Image Push to ECR Completed -  $REPOSITORY_URI:$TAG"
      # Setup kubectl with our EKS Cluster              
      #- echo "Update Kube Config"      
      #- aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      # Apply changes to our Application using kubectl
      #- echo "Apply changes to kube manifests"            
      #- kubectl apply -f YAML/deployment.yml
      #- echo "Completed applying changes to Kubernetes Objects" 
      - printf '[{"name":"html-2","imageUri":"%s"}]' 344306482818.dkr.ecr.us-east-1.amazonaws.com/$REPOSITORY_URI:$TAG > imagedefinitions.json
  artifacts:
    files: imagedefinitions.json
  
